using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Dizi_ile_Tablo_Gösterme
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        static string connection_string =
          @"Server=BAYRAM\WINCC;Initial Catalog=GUN_5;User ID=sa;Password=123456;";
        private void button1_Click_1(object sender, EventArgs e)
        {
            Veri();
        }
        private void Veri()
        {
            for (int i = 0; i < Controls.Count; i++)
            {
                if (Controls[i] is DataGridView)
                {
                    Controls[i].Dispose();
                    i = i - 1;
                }
            }

            int yyy = 0;
            int xxx = 0;
            int ttt = 0;

            using (SqlConnection conn = new SqlConnection(connection_string))
            {
                conn.Open();

                using (SqlCommand cmnd = new SqlCommand("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME like't_%'", conn))
                {
                    using (SqlDataReader read = cmnd.ExecuteReader())
                    {
                        while (read.Read())
                        {
                            ttt++;
                            // ttt sayısını döngüde döndürerek ttt sayısını öğreniyoruz kaç olduğunu yani içinde t_ bulunna kaç tane tablo olduğunu
                        }
                    }
                }

                string[] Tablolar = new string[ttt];
                // diziye ttt sayısı kadar eleman atıyoruz
                ttt = 0;
                using (SqlCommand cmnd = new SqlCommand("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME like't_%'", conn))
                {
                    using (SqlDataReader read = cmnd.ExecuteReader())
                    {
                        while (read.Read())
                        {
                            Tablolar[ttt] = read["TABLE_NAME"].ToString();
                            // atadığımız elemeların hangi tablo ismine denk geldiğini burada saptıyoruz
                            ttt++;
                        }
                    }
                }

                for (int i = 0; i < Tablolar.Length; i++)
                {
                    //  tablodaki eleman sayısı kadar tabloyu döndürüyoruz.
                    DataGridView dgv = new DataGridView();

                    if ((xxx + 1) * dgv.Width > Width) { xxx = 0; yyy++; }
                    dgv.Location = new Point(0 + xxx * dgv.Width, 0 + yyy * dgv.Height);
                    xxx++;

                    Controls.Add(dgv);
                    dgv.Rows.Clear();

                    string sorgu = "SELECT * FROM " + Tablolar[i];
                    // oluşturduğumuz string veri ile dizi adedince yer alan tabloları okuyoruz. Kısa olması ve görülebilirlik açısından buraya yazdık.
                    using (SqlCommand cmnd = new SqlCommand(sorgu, conn))
                    {
                        using (SqlDataReader read = cmnd.ExecuteReader())
                        {
                            if (read.HasRows)
                            {
                                bool zzz = false;
                                while (read.Read()) 
                                {
                                    switch (zzz)
                                    {
                                        case false:
                                            for (int j = 0; j < read.FieldCount; j++)
                                            {
                                                dgv.Columns.Add(read.GetName(j), read.GetName(j));
                                                zzz = true;
                                            }
                                            break;
                                    }
                                    dgv.Rows.Add();
                                    for (int j = 0; j < read.FieldCount; j++)
                                    {
                                        dgv.Rows[dgv.RowCount - 2].Cells[j].Value = read[j].ToString();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
